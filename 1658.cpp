//Ах как я люблю программировать на русском...
#include <iostream>
#define макс_T 10000
#define косарь 1000


#define счетчик iter
#define счетчик2 jiter
#define счетчик3 kiter
#define беззнаковое unsigned
#define целое int
#define глав main
#define ввод cin
#define вывод cout
#define класс class
#define статическое static
#define публичное public
#define новое new
#define вернуть return
#define если if
#define коли if
#define при if
#define иначе else
#define коли_нет else
#define пока while
#define прервать break
#define продолжить continue
#define ы //
#define один 1
#define половина 0.5
#define нецелое float
#define цикл for
#define пустота void
#define целое_маленькое short
#define конст 8100
#define целое_большое long
//Классно писать код на русском. Митя не сможет списать его из моего гитхаба, так как спалится на антиплагиате)))
using namespace std;

целое глав();
пустота printbear();
пустота printbear(string bear [])
{
}

целое_маленькое O[косарь][макс_T];

целое_маленькое o[косарь][макс_T];

класс strucktura
        {
        публичное:

            пустота writeO(целое a, целое b, целое_маленькое data)
            {
                O[a][b] = data;
            }
             пустота writeo(целое a, целое b, целое_маленькое data)
            {
                o[a][b] = data;
            }
             целое_маленькое getO(целое a, целое b)
            {
                вернуть O[a][b];
            }
             целое_маленькое geto(целое a, целое b)
            {
                вернуть o[a][b];
            }
        };
класс square
        {
        публичное:
            статическое целое sq(целое N)
            {
                вернуть N*N;
            }
        };
целое глав() {
    strucktura _o {};
    string bear [] =
            {
                    " __         __",
                    "/  \.-","",". \n",
                    "\    -   -    /:",
                    " |   o   o   |",
                    " \  .-'''-.  /",
                    "'  -\__Y__/-'",
                    "     `---`"

            };

    _o.writeO(0,0, один);
    беззнаковое целое счетчик = один;
    пока (счетчик<косарь){
        беззнаковое целое счетчик1 = один;
        пока (счетчик1<макс_T){
            _o.writeo(счетчик, счетчик1, 102);//o[счетчик][счетчик1] = 102;
            беззнаковое целое счетчик2 = один;
            пока (счетчик2<10){
                целое b = счетчик1 - счетчик2 * счетчик2;
                целое a = счетчик - счетчик2;
                если (a>=0&&b>=0 && _o.getO(a,b) && _o.geto(a,b) + один < _o.geto(счетчик, счетчик1)) {
                    _o.writeO(счетчик, счетчик1, счетчик2);//O[счетчик][счетчик1] = счетчик2;
                    _o.writeo(счетчик,счетчик1,_o.geto(a,b)+один);//[счетчик][счетчик1] = ____o.o[a][b] + 1;
                }
                счетчик2+=один;
            }
            счетчик1+=один;
        }
        счетчик+=один;
    }


    целое t;
    ввод >> t;
    пока(t>0) {
        t-=один;
        целое_большое s1, s2;
        ввод >> s1 >> s2;

        если(!(s2 <= конст && s1 <= косарь && _o.geto(s1,s2) <= 100)) {
            вывод << "No solution" << "\n";
            продолжить;
        }

        целое n = _o.geto(s1,s2);//o[s1][s2];
        счетчик=0;
        пока (счетчик<n)
        {
            счетчик+=1;
            целое d = _o.getO(s1,s2);//O[s1][s2];
            вывод << d;
            s1 -= d;
            s2 -= square::sq(d);
        }
        вывод << "\n";

    }
}
